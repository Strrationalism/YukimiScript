name: .NET

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest, ubuntu-latest ]
    steps:
    - uses: actions/checkout@v2
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore -c Release
      
    - name: Test
      run: dotnet test --no-build --verbosity normal -c Release
      
    - name: Publish YukimiScript.Parser
      run: dotnet publish YukimiScript.Parser -c Release
      if: ${{ runner.os == 'Windows' }}
      
    - name: Upload YukimiScript.Parser Library
      if: ${{ runner.os == 'Windows' }}
      uses: actions/upload-artifact@v2.2.4
      with:
          name: "YukimiScript.Parser Library"
          path: "${{ github.workspace }}/YukimiScript.Parser/bin/Release/netstandard2.0/publish/YukimiScript.Parser.dll"

    - name: Publish Command Line Tool for DotNetTool
      if: ${{ runner.os == 'Windows' }}
      run: dotnet pack YukimiScript.CommandLineTool/YukimiScript.CommandLineTool.fsproj -c Release

    - name: Publish Command Line Tool for Windows
      if: ${{ runner.os == 'Windows' }}
      run: dotnet publish YukimiScript.CommandLineTool/YukimiScript.CommandLineTool.AOT.fsproj -c Release -r win7-x64 --no-self-contained
    
    - name: Publish Command Line Tool for macOS
      if: ${{ runner.os == 'macOS' }}
      run: |
        dotnet publish YukimiScript.CommandLineTool/YukimiScript.CommandLineTool.AOT.fsproj -c Release -r osx-x64
        strip ${{ github.workspace }}/YukimiScript.CommandLineTool/bin/Release/net6.0/osx-x64/publish/ykmc
        
    - name: Publish Command Line Tool for Linux
      if: ${{ runner.os == 'Linux' }}
      run: |
        dotnet publish YukimiScript.CommandLineTool/YukimiScript.CommandLineTool.fsproj -c Release -r linux-x64 -p:PublishSingleFile=true -p:PublishTrimmed=true --self-contained
        mv ${{ github.workspace }}/YukimiScript.CommandLineTool/bin/Release/net6.0/linux-x64/publish/YukimiScript.CommandLineTool ${{ github.workspace }}/YukimiScript.CommandLineTool/bin/Release/net6.0/linux-x64/publish/ykmc
        strip ${{ github.workspace }}/YukimiScript.CommandLineTool/bin/Release/net6.0/linux-x64/publish/ykmc
        
    - name: Test Executable File for Windows
      if: ${{ runner.os == 'Windows' }}
      run: ${{ github.workspace }}/YukimiScript.CommandLineTool/bin/Release/net6.0/win7-x64/publish/ykmc.exe
      
    - name: Test Executable File for macOS
      if: ${{ runner.os == 'macOS' }}
      run:  ${{ github.workspace }}/YukimiScript.CommandLineTool/bin/Release/net6.0/osx-x64/publish/ykmc

    - name: Upload Command Line Tool for DotNetTool
      uses: actions/upload-artifact@v2.2.4
      with:
          name: YukimiScript Command Line Tool for DotNetTool
          path: ${{ github.workspace }}/YukimiScript.CommandLineTool/bin/Release/*.nupkg
      if: ${{ runner.os == 'Windows' }}

    - name: Upload Command Line Tool for Windows
      uses: actions/upload-artifact@v2.2.4
      with:
          name: YukimiScript Command Line Tool for Windows x64
          path: ${{ github.workspace }}/YukimiScript.CommandLineTool/bin/Release/net6.0/win7-x64/publish/ykmc.exe
      if: ${{ runner.os == 'Windows' }}
     
    - name: Upload Command Line Tool for macOS
      uses: actions/upload-artifact@v2.2.4
      with:
          name: YukimiScript Command Line Tool for macOS x64
          path: ${{ github.workspace }}/YukimiScript.CommandLineTool/bin/Release/net6.0/osx-x64/publish/ykmc
      if: ${{ runner.os == 'macOS' }}

    - name: Upload Command Line Tool for Linux
      uses: actions/upload-artifact@v2.2.4
      with:
          name: YukimiScript Command Line Tool for Linux x64
          path: ${{ github.workspace }}/YukimiScript.CommandLineTool/bin/Release/net6.0/linux-x64/publish/ykmc
      if: ${{ runner.os == 'Linux' }}
